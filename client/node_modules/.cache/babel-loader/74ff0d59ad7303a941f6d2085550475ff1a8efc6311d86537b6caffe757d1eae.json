{"ast":null,"code":"import { FETCH_ALL, FETCH_POST, CREATE, UPDATE, DELETE, COMMENT } from \"./../constants/actionTypes\";\nimport * as api from \"../api\";\nexport const getPost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const commentPost = (value, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.comment(value, id);\n    dispatch({\n      type: COMMENT,\n      payload: data\n    });\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","FETCH_POST","CREATE","UPDATE","DELETE","COMMENT","api","getPost","id","dispatch","data","fetchPost","type","payload","error","console","log","getPosts","fetchPosts","createPost","post","updatePost","commentPost","value","comment","comments","deletePost"],"sources":["C:/Users/tinsy/Full Stack WD/mern blog/travel-blog-mern-stack/client/src/actions/posts.js"],"sourcesContent":["import {\r\n  FETCH_ALL,\r\n  FETCH_POST,\r\n  CREATE,\r\n  UPDATE,\r\n  DELETE,\r\n  COMMENT,\r\n} from \"./../constants/actionTypes\";\r\nimport * as api from \"../api\";\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPost(id);\r\n    dispatch({ type: FETCH_POST, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createPost(post);\r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const commentPost = (value, id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.comment(value, id);\r\n    dispatch({ type: COMMENT, payload: data });\r\n    return data.comments;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,SACEA,SAAS,EACTC,UAAU,EACVC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,OAAO,QACF,4BAA4B;AACnC,OAAO,KAAKC,GAAG,MAAM,QAAQ;AAE7B,OAAO,MAAMC,OAAO,GAAIC,EAAE,IAAK,MAAOC,QAAQ,IAAK;EACjD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACK,SAAS,CAACH,EAAE,CAAC;IACxCC,QAAQ,CAAC;MAAEG,IAAI,EAAEX,UAAU;MAAEY,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC/C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAGA,CAAA,KAAM,MAAOR,QAAQ,IAAK;EAChD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACY,UAAU,CAAC,CAAC;IACvCT,QAAQ,CAAC;MAAEG,IAAI,EAAEZ,SAAS;MAAEa,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMK,UAAU,GAAIC,IAAI,IAAK,MAAOX,QAAQ,IAAK;EACtD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACa,UAAU,CAACC,IAAI,CAAC;IAC3CX,QAAQ,CAAC;MAAEG,IAAI,EAAEV,MAAM;MAAEW,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMO,UAAU,GAAGA,CAACb,EAAE,EAAEY,IAAI,KAAK,MAAOX,QAAQ,IAAK;EAC1D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACe,UAAU,CAACb,EAAE,EAAEY,IAAI,CAAC;IAC/CX,QAAQ,CAAC;MAAEG,IAAI,EAAET,MAAM;MAAEU,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMQ,WAAW,GAAGA,CAACC,KAAK,EAAEf,EAAE,KAAK,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACkB,OAAO,CAACD,KAAK,EAAEf,EAAE,CAAC;IAC7CC,QAAQ,CAAC;MAAEG,IAAI,EAAEP,OAAO;MAAEQ,OAAO,EAAEH;IAAK,CAAC,CAAC;IAC1C,OAAOA,IAAI,CAACe,QAAQ;EACtB,CAAC,CAAC,OAAOX,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMY,UAAU,GAAIlB,EAAE,IAAK,MAAOC,QAAQ,IAAK;EACpD,IAAI;IACF,MAAMH,GAAG,CAACoB,UAAU,CAAClB,EAAE,CAAC;IAExBC,QAAQ,CAAC;MAAEG,IAAI,EAAER,MAAM;MAAES,OAAO,EAAEL;IAAG,CAAC,CAAC;EACzC,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}